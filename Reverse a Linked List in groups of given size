#include<bits/stdc++.h>
using namespace std;


struct node
{
    int data;
    struct node* next;
    
    node(int x){
        data = x;
        next = NULL;
    }
    
};

/* Function to print linked list */
void printList(struct node *node)
{
    while (node != NULL)
    {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}


 // } Driver Code Ends
/*
  Reverse a linked list
  The input list will have at least one element  
  Return the node which points to the head of the new LinkedList
  Node is defined as 
    struct node
    {
        int data;
        struct node* next;
    
        node(int x){
            data = x;
            next = NULL;
        }
    
    }*head;
*/

class Solution
{
    public:
    struct node *reverse (struct node *head, int k)
    { 
        node* nxt;
        node* pre = NULL;
        int c = 0;
        node* curr = head;
        while(curr!=NULL && c<k){
            nxt = curr->next;
            curr->next = pre;
            pre = curr;
            curr = nxt;
            c++;
        }
        if(nxt!=NULL){
            head->next = reverse(nxt,k);
        }
        return pre;
 
        
    }
};
